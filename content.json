{"pages":[{"title":"tags","text":"","link":"/tags/index.html"},{"title":"About","text":"seven777777 from sdust","link":"/about/index.html"}],"posts":[{"title":"贝叶斯分类器","text":"地震预报是比较困难的一个课题,可以根据地震与生物异常反应之间的联系来进行研究。根据历史记录的统计,地震前一周内出现生物异常反应的概率为50%,而一周内没有发生地震但也出现了生物异常反应的概率为 10%。假设某 一个地区属于地震高发区,发生地震的概率为 20%。问:如果某日观察到明显的生物异常反应现象,是否应当预报一周内将发生地震? 设发生地震为$w_1$，不发生地震为$w_2$，当前出现的状态(出现了生物异常)为$x$。由题意可得$P(x|w_1)=0.5,P(x|w_2)=0.1,P(w_1)=0.2,P(w_2)=0.8$ 当前情况下$w_1$的概率为$P(w_1|x)=\\displaystyle\\frac{P(x|w_1)P(w_1)}{P(x)}$ 当前情况下$w_2$的概率为$P(w_2|x)=\\displaystyle\\frac{P(x|w_2)P(w_2)}{P(x)}$ $P(x)=\\sum_{j=1}^2P(x|w_j)P(w_j)=0.18$$P(w_1|x)=\\displaystyle\\frac{P(x|w_1)P(w_1)}{P(x)}=0.5556$$P(w_2|x)=\\displaystyle\\frac{P(x|w_2)P(w_2)}{P(x)}=0.4444$所以$P(w_1|x)=0.5556&gt;P(w_2|x)=0.4444$，故应当预报一周内将发生地震 对于上例中的地震预报问题,假设预报一周内发生地震,可以预先组织抗震 救灾,由此带来的防灾成本会有 2500 万元,而当地震确实发生时,由于地震造 成的直接损失会有 1000 万元;假设不预报将发生地震而地震又发生了,造成的 损失会达到 5000 万元。请问在观察到明显的生物异常反应后,是否应当预报一周内将发生地震? 根据题意可得：实际发生地震且预报发生地震的损失$\\lambda_1^1=3500$实际发生地震却不预报发生地震的损失$\\lambda_1^2=5000$实际不发生地震却预报发生地震的损失$\\lambda_2^1=2500$实际不发生地震且不预报发生地震的损失$\\lambda_2^2=0$ $R(\\alpha_1|X)$$=\\sum_{j=1}^2\\lambda_j^1P(w_j|x)$$=\\lambda_1^1P(w_1|x)+\\lambda_2^1P(w_2|x)$$=5000\\displaystyle\\frac{P(x|w_1)P(w_1)}{P(x)}+2500\\displaystyle\\frac{P(x|w_2)p(w_2)}{P(x)}$$=\\displaystyle\\frac{500}{P(x)}=2777.8$ $R(\\alpha_2|X)$$=\\sum_{j=1}^2\\lambda_j^2P(w_j|x)$$=\\lambda_1^2P(w_1|x)+\\lambda_2^2P(w_2|x)$$=5000*\\displaystyle\\frac{P(x|w_1)P(w_1)}{P(x)}$$=\\displaystyle\\frac{500}{P(x)}=2777.8$ 故$R(\\alpha_1|X)=3055.6&gt;R(\\alpha_2|X)=2777.8$，所以不应当预报一周内将发生地震","link":"/2020/02/19/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8/"},{"title":"在腾讯云服务器上部署hexo博客","text":"如何在腾讯云服务器上部署hexo博客本人在搭建过程中遇到了很多问题，因此写一个教程贴来总结一下 前期准备 本地环境 macOS Catalina 10.15 git node.js hexo 服务器端 腾讯云服务器 CentOS 7.6 64 Bit git node.js Nginx 服务器端部署 1.安装git1yum install git 2.安装node.js 1curl --silent --location https://rpm.nodesource.com/setup_5.x | bash - 使用 git --version 和 node --version 查看版本号 3.安装Nginx 1yuminstall nginx 使用 nginx -v查看版本号 4.配置Nginx 1vim /etc/nginx/nginx.conf 进行以下修改 1234567891011121314151617181920server { listen 80 default_server; listen [::]:80 default_server; server_name www.seven7.xyz seven7.xyz; #域名 root /home/hexo; #网站的根目录 自行创建 #以下不作修改 # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; location / { } error_page 404 /404.html; location = /40x.html { } error_page 500 502 503 504 /50x.html; location = /50x.html { } }配置完成后保存退出，使用nginx -t查看配置是否有错误。查看运行状态：systemctl status nginx，显示running表示成功运行 5.创建git用户123useradd gitchmod chmod 740 /etc/sudoersvim /etc/sudoers 在sudoers中找到下面内容 12## Allow root to run any commands anywhereroot ALL=(ALL) ALL 并且在下面增加 1git ALL=(ALL) ALL 修改权限 1chmod 400 /etc/sudoers 使用su git切换到git用户 1234567891011# 切换到git用户目录cd /home/git# 创建.ssh文件夹mkdir ~/.ssh# 创建authorized_keys文件并编辑vim ~/.ssh/authorized_keys# 如果你还没有生成公钥，那么首先在本地电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy生成公钥# 再将公钥复制粘贴到authorized_keys# 保存关闭authorized_keys后，修改相应权限chmod 600 ~/.ssh/authorzied_keyschmod 700 ~/.ssh 本地测试是否可以进行免密码登陆 1ssh -v git@服务器IP地址 6.建立git裸库1234# 回到git目录cd /home/git# 使用git用户创建git裸仓库，以blog.git为例git init --bare blog.git 使用下列命令修改用户组权限 12sudo chown git:git -R /home/hexosudo chown git:git -R /home/git/blog.git 7.使用git-hooks同步网站根目录1vim ~/blog.git/hooks/post-receive 在里面输入下列内容 12#!/bin/shgit --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f 保存退出后执行 chmod +x post-receive修改权限 到这里服务器端就已经配置完成了 本地端配置 打开hexo根目录下的_config.yml文件，进行下列配置 1234deploy: type: git repo: git@你的服务器IP:/home/git/blog.git branch: master 然后发布 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d","link":"/2020/02/06/%E5%9C%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2/"},{"title":"hello-world","text":"Hello world！","link":"/2020/02/06/hello-world/"}],"tags":[{"name":"数据挖掘","slug":"数据挖掘","link":"/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"}],"categories":[{"name":"作业","slug":"作业","link":"/categories/%E4%BD%9C%E4%B8%9A/"},{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"}]}